"""
Django settings for mashroo project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from django.conf.global_settings import DATETIME_INPUT_FORMATS

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_PATH    = os.path.realpath(os.path.dirname(__file__))
BASE_DIR        = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

SITE  = 1
SOCIETE  = 1


DATETIME_INPUT_FORMATS += ('%Y-%m-%d %I:%M %p', '%Y-%m-%d %H:%M')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'geu7%b(ka0gt%2uj($+05n@8-o2oe@0_af9o(@u$()04_86gok'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.sites',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    # Uncomment the next line to enable the admin:
    'debug_toolbar',
    'djangobower',
    # Authentication
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    # DRF
    'rest_framework',
    'taggit',
    # django notifications x (django-notify-x)
    'notify',
    # moduu=le mashroo
    # taxonomie methode de classification de l'information (search , categories, tags)

    'core.widgets',
    'core.profile',
    'core.taxonomy',
    'core.notifications',
    'avatar',
    'todo',
    'projects',
    'blog',
    'markdownify',
    'markdown_filter',
    'mdeditor',
    'businessce',
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

ROOT_URLCONF = 'mashroo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mashroo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

"""
# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'mashroodb',
        'USER': 'postgres',
        'PASSWORD': 'grutil001',
        'HOST': 'localhost',
        'PORT': '',
    }
}

"""


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/



# Hosts/domain names that are valid for this site; required if DEBUG is False
# See https://docs.djangoproject.com/en/1.5/ref/settings/#allowed-hosts
ALLOWED_HOSTS = ['localhost', '127.0.0.1',  '51.178.136.190', '*' , '127.0.0.1:8080']


# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# In a Windows environment this must be set to your system time zone.
TIME_ZONE = 'Europe/Paris'

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
LANGUAGE_CODE = 'Fr-fr'

DEFAULT_CHARSET='UTF-8'

SITE_ID = 1

# If you set this to False, Django will make some optimizations so as not
# to load the internationalization machinery.
USE_I18N = True

# If you set this to False, Django will not format dates, numbers and
# calendars according to the current locale.
USE_L10N = True

# If you set this to False, Django will not use timezone-aware datetimes.
# Lorsque USE_TZ vaut True et que la base de données ne gère pas les fuseaux horaires (par ex. SQLite, MySQL, Oracle), Django lit et écrit les dates/heures en heure locale en fonction de cette option quand elle est définie et en UTC si elle ne l’est pas.

USE_TZ = False

# Absolute filesystem path to the directory that will hold user-uploaded files.
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

# Absolute filesystem path to the directory that will hold user-uploaded files.
# Example: "/var/www/example.com/media/"./manage.py bower install
MEDIA_ROOT = os.path.join(BASE_DIR  , 'uploads')
# MEDIA_ROOT = os.path.join(BASE_DIR  , 'media/')

# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash.
# Examples: "http://example.com/media/", "http://media.example.com/"
MEDIA_URL = '/media/'

# Absolute path to the directory static files should be collected to.
# Don't put anything in this directory yourself; store your static files
# in apps' "static/" subdirectories and in STATICFILES_DIRS.
# Example: "/var/www/example.com/static/"
# STATIC_ROOT = os.path.join("/var/www/django/gterpsce",   'static')


#STATIC_ROOT = os.path.join(BASE_DIR,   'projects', 'static')
STATIC_ROOT = os.path.join(BASE_DIR,   'static')

# URL prefix for static files.
# Example: "http://example.com/static/", "http://static.example.com/"
STATIC_URL = '/static/'

# Additional locations of static files
STATICFILES_DIRS__ = [
    os.path.join(PROJECT_PATH, 'blog', 'static'),
    os.path.join(PROJECT_PATH, 'projects', 'static'),
    os.path.join(PROJECT_PATH, 'bower_components'),
    os.path.join(PROJECT_PATH, 'media'),
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
]

# List of finder classes that know how to find static files in
# various locations.
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'djangobower.finders.BowerFinder',
    )



BOWER_INSTALLED_APPS = (
    'jquery',
    'jquery-ui',
    'bootstrap',
    'moment',
    'fullcalendar',
    'bootstrap_table',
    'pandas_bootstrap_table'
)

TEMPLATES = [
    {
    'BACKEND': 'django.template.backends.django.DjangoTemplates',
    'DIRS': [
         os.path.join(BASE_DIR,  'blog', 'templates'),
         os.path.join(BASE_DIR,  'blog', 'templates', 'blog'),
         os.path.join(BASE_DIR,  'blog', 'templates', 'siteweb'),
         os.path.join(BASE_DIR,  'projects', 'templates'),
         os.path.join(BASE_DIR,  'projects', 'templates', 'allauth'),
         os.path.join(BASE_DIR,  'projects', 'templates', 'allauth', 'account'),
         os.path.join(BASE_DIR,  'projects', 'templates', 'projects' ),
         os.path.join(BASE_DIR,  'projects', 'templates', 'notifications' ),
         os.path.join(BASE_DIR,  'projects', 'templates', 'notifications',  'includes'),
         os.path.join(BASE_DIR,  'projects', 'templates', 'widgets'),
         os.path.join(BASE_DIR,  'core', 'templatetags'),
         os.path.join(BASE_DIR,  'businessce', 'templates', 'console'),

             ],
    'APP_DIRS': True,
    'OPTIONS': {
        'context_processors': [
             # Insert your TEMPLATE_CONTEXT_PROCESSORS here or use this
            'django.contrib.auth.context_processors.auth',
            'django.template.context_processors.debug',
            'django.template.context_processors.i18n',
            'django.template.context_processors.media',
            'django.template.context_processors.request',
            'django.contrib.messages.context_processors.messages'
        ],

        'libraries':{
            'breadcrumbs': 'core.templatetags.breadcrumbs',
            'details': 'core.templatetags.details',
            #'region': 'core.templatetags.region',

            }
    },
}]


#################
# AUTHENTICATION #
##################
ACCOUNT_EMAIL_REQUIRED=True
ACCOUNT_AUTHENTICATION_METHOD = 'username'

AUTH_USER_MODEL = 'auth.User'

AUTHENTICATION_BACKENDS = ['django.contrib.auth.backends.ModelBackend']

LOGIN_URL = '/account/login/'

LOGIN_REDIRECT_URL = '/'

LOGOUT_REDIRECT_URL = '/account/login/'

# The number of days a password reset link is valid for
PASSWORD_RESET_TIMEOUT_DAYS = 3


AUTH_PASSWORD_VALIDATORS = []
###########
# LOGGING #
###########

# The callable to use to configure logging
LOGGING_CONFIG = 'logging.config.dictConfig'

# Custom logging configuration.
LOGGING = {}

# Default exception reporter filter class used in case none has been
# specifically assigned to the HttpRequest instance.
DEFAULT_EXCEPTION_REPORTER_FILTER = 'django.views.debug.SafeExceptionReporterFilter'

VISIBILITE_CHOICES = [("P" , "Projet Public"), ("I", "Projet interne"), ("C", "Projet lié à un client"),  ("V", "Projet privé seulement au abonnés"),]
VISIBILITE_DEFAULT = "Projet Public"


# import des variables taxonomy
# from core.taxonomy import SEARCH_IN_MODELS



# import des variables taxonomy
from mashroo.taxonomy import SEARCH_IN_MODELS

# import des variables projects
from mashroo.projects import *

FILE_UPLOAD_MAX_MEMORY_SIZE = 20 # 2621440 (c-à-d. 2.5 Mio).


# Securite API corsheaders

CORS_ORIGIN_ALLOW_ALL = True # If this is used then `CORS_ORIGIN_WHITELIST` will not have any effect

CORS_ALLOW_CREDENTIALS = True

CORS_ORIGIN_WHITELIST = [
    'http://localhost:3000',
    'http://localhost:8080',
] # If this is used, then not need to use `CORS_ORIGIN_ALLOW_ALL = True`
CORS_ORIGIN_REGEX_WHITELIST = [
    'http://localhost:3000',
    'http://localhost:8080',
]



## BLOG MDEDITOR ##
X_FRAME_OPTIONS = 'SAMEORIGIN'

MDEDITOR_CONFIGS = {
    'default':{
    'language': 'en',
        'width': '90% ',  # Custom edit box width
        'heigth': 500,  # Custom edit box height
        'toolbar': ["undo", "redo", "|",
                    "bold", "del", "italic", "quote", "ucwords", "uppercase", "lowercase", "|",
                    "h1", "h2", "h3", "h5", "h6", "|",
                    "list-ul", "list-ol", "hr", "|",
                    "link", "reference-link", "image", "code", "preformatted-text", "code-block", "table", "datetime"
                    "emoji", "html-entities", "pagebreak", "goto-line", "|",
                    "help", "info",
                    "||", "preview", "watch", "fullscreen"],  # custom edit box toolbar
        'upload_image_formats': ["jpg", "jpeg", "gif", "png", "bmp", "webp"],  # image upload format type
        'image_folder': 'editor',  # image save the folder name
        'theme': 'default',  # edit box theme, dark / default
        'preview_theme': 'default',  # Preview area theme, dark / default
        'editor_theme': 'default',  # edit area theme, pastel-on-dark / default
        'toolbar_autofixed': True,  # Whether the toolbar capitals
        'search_replace': True,  # Whether to open the search for replacement
        'emoji': True,  # whether to open the expression function
        'tex': True,  # whether to open the tex chart function
        'flow_chart': True,  # whether to open the flow chart function
        'sequence': True, # Whether to open the sequence diagram function
        'watch': True,  # Live preview
        'lineWrapping': False,  # lineWrapping
        'lineNumbers': False  # lineNumbers
    }

}

MARKDOWN_FILTER_WHITELIST_TAGS = [
    'a',
    'p',
    'code', 'pre',
    'h1', 'h2', 'h3', 'h4'
    'pre',
    'ul', 'li'
     'a',
  'abbr',
  'acronym',
  'b',
  'blockquote',
  'em',
  'i',
  'ol',
  'p',
  'strong',
]

MARKDOWNIFY_WHITELIST_ATTRS = [
    'href',
    'src',
    'alt',
]

MARKDOWNIFY_WHITELIST_STYLES = [
    'color',
    'font-weight',
]

MARKDOWNIFY_WHITELIST_TAGS = [
    'a',
    'p',
    'h1', 'h2', 'h3', 'h4'
    'code', 'pre',
    'ul', 'li'
     'abbr',
     'acronym',
     'b',
     'blockquote',
     'em',
     'i',
     'ol',
     'p',
     'strong',
]
